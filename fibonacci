package fibonacci;

public class Fibonacci {

	public static void main(String[] args) {
		
		for (int i = 0; i < 50; i++) {
			System.out.print(fibonacciRecursivo(i) + " ");
		}
		
	}

	public static long fibonacciRecursivo(int pN) {
		if (pN < 2) {
			return (long) pN;
		}else	
		return fibonacciRecursivo (pN-1) + fibonacciRecursivo (pN-2);
}
		
	
	public static long fibonacciIterativo(int pN)
	{
		long beforepreview = 0, preview = 1, last = 0;
if (pN <2) return (long) pN;
for (int i = 2; i <= pN; i++)
{
last = preview + beforepreview;
beforepreview = preview;
preview = last;
}
return last;
}
		
	}
//classe proFibonacci
package fibonacci;

public class proFibonacci {




			public static void main(String[] args) {
				
				for (int i = 0; i < 50; i++) {
					System.out.print(fibonacciRecursivo(i) + " ");
				}
				
			}

			public static long fibonacciRecursivo(int pN) {
				if (pN < 2) {
					return (long) pN;
				}else	
				return fibonacciRecursivo (pN-1) + fibonacciRecursivo (pN-2);
		}
				
			
			public static long fibonacciIterativo(int pN)
			{
				long beforepreview = 0, preview = 1, last = 0;
		if (pN <2) return (long) pN;
		for (int i = 2; i <= pN; i++)
		{
		last = preview + beforepreview;
		beforepreview = preview;
		preview = last;
		}
		return last;
		}
				
			



	}




